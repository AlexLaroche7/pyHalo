import numpy as np

log_rho0_vpower1 = np.array([[[7.9924, 7.6997, 7.589, 7.5446, 7.5192, 7.4994],
                              [8.0802, 7.8132, 7.7302, 7.6977, 7.6833, 7.685],
                              [8.1324, 7.8811, 7.8113, 7.7894, 7.7945, 7.8377],
                              [8.1626, 7.9263, 7.8567, 7.8513, 7.8802, 8.5937],
                              [8.1826, 7.9597, 7.8936, 7.8932, 7.9304, 8.0274],
                              [8.2034, 7.9769, 7.9201, 7.923, 7.9779, 8.3721],
                              [8.209, 7.9942, 7.9378, 7.9453, 8.7225, 8.2521],
                              [8.2199, 8.0045, 7.9538, 7.9761, 8.0519, 8.2643],
                              [8.2257, 8.0152, 7.9679, 7.9935, 8.0803, 8.2515],
                              [8.2274, 8.0283, 7.9814, 8.0094, 8.6096, 8.2548],
                              [8.2399, 8.0381, 7.9946, 8.026, 8.562, 8.2532]],
                             [[7.9354, 7.6212, 7.4975, 7.4376, 7.4082, 7.3853],
                              [8.0152, 7.727, 7.6178, 7.5805, 7.5515, 7.5436],
                              [8.0647, 7.7958, 7.6998, 7.6661, 7.6501, 7.6518],
                              [8.0956, 7.8369, 7.7505, 7.7156, 7.7136, 7.7211],
                              [8.116, 7.8548, 7.7818, 7.7541, 7.7558, 7.7822],
                              [8.1317, 7.8762, 7.8073, 7.7821, 7.7838, 7.8278],
                              [8.144, 7.8921, 7.8256, 7.8038, 7.8113, 7.8578],
                              [8.1532, 7.9045, 7.8414, 7.822, 7.8295, 7.8819],
                              [8.1582, 7.9153, 7.8547, 7.8387, 7.8643, 8.6386],
                              [8.162, 7.9355, 7.8726, 7.8541, 7.883, 7.953],
                              [8.17, 7.946, 7.8856, 7.8729, 7.9026, 7.9836]],
                             [[7.8672, 7.54, 7.3947, 7.3331, 7.2915, 7.2679],
                              [7.9538, 7.6348, 7.522, 7.4578, 7.433, 7.4113],
                              [7.9918, 7.6991, 7.5884, 7.544, 7.5186, 7.4988],
                              [8.0255, 7.7365, 7.6298, 7.5916, 7.5758, 7.5615],
                              [8.0367, 7.7645, 7.6686, 7.6291, 7.6059, 7.6039],
                              [8.0561, 7.7807, 7.6907, 7.6536, 7.6342, 7.6334],
                              [8.0699, 7.7986, 7.7094, 7.6747, 7.6587, 7.6604],
                              [8.0772, 7.8102, 7.7272, 7.6981, 7.6803, 7.682],
                              [8.0902, 7.8298, 7.7417, 7.715, 7.7007, 7.7048],
                              [8.103, 7.8419, 7.7546, 7.7231, 7.7202, 7.7285],
                              [8.1238, 7.8534, 7.7729, 7.7439, 7.7401, 7.7674]],
                             [[7.8142, 7.4508, 7.3026, 7.2254, 7.1753, 7.1463],
                              [7.8731, 7.5419, 7.415, 7.3484, 7.3017, 7.2782],
                              [7.9193, 7.6017, 7.4735, 7.4163, 7.3835, 7.3581],
                              [7.9458, 7.6369, 7.5241, 7.46, 7.4352, 7.4135],
                              [7.966, 7.6596, 7.5487, 7.4994, 7.4672, 7.4531],
                              [7.9833, 7.6827, 7.5722, 7.5244, 7.4965, 7.4856],
                              [7.992, 7.7027, 7.592, 7.5451, 7.5222, 7.5024],
                              [8.0037, 7.7204, 7.6071, 7.5682, 7.5431, 7.5271],
                              [8.0173, 7.7307, 7.624, 7.5867, 7.5709, 7.5532],
                              [8.0302, 7.7521, 7.6423, 7.6075, 7.5942, 7.5798],
                              [8.0402, 7.768, 7.6688, 7.6326, 7.6094, 7.6074]],
                             [[7.7588, 7.3627, 7.1997, 7.1141, 7.0563, 7.023],
                              [7.8078, 7.4494, 7.302, 7.2248, 7.1748, 7.1433],
                              [7.8481, 7.5026, 7.3586, 7.2921, 7.249, 7.214],
                              [7.8691, 7.5428, 7.4016, 7.3349, 7.2933, 7.2698],
                              [7.864, 7.5637, 7.4333, 7.3708, 7.3364, 7.3064],
                              [7.9046, 7.5816, 7.4603, 7.3938, 7.3611, 7.3398],
                              [7.9241, 7.5955, 7.4792, 7.4185, 7.3892, 7.3662],
                              [7.9388, 7.6255, 7.5018, 7.4419, 7.415, 7.3954],
                              [7.9571, 7.6474, 7.5296, 7.4777, 7.444, 7.4247],
                              [7.9681, 7.6716, 7.5508, 7.5015, 7.4703, 7.4552],
                              [7.9788, 7.686, 7.5745, 7.5276, 7.5022, 7.4913]]])

log_rho0_vpower75 = np.array([[[8.2231, 7.8735, 7.7257, 7.6555, 7.6123, 7.5773],
                               [8.2848, 7.9604, 7.8323, 7.7716, 7.7389, 7.7168],
                               [8.3149, 8.0119, 7.9011, 7.8484, 7.8205, 7.8055],
                               [8.3438, 8.0487, 7.9404, 7.899, 7.8706, 7.8542],
                               [8.3547, 8.0715, 7.9657, 7.925, 7.9092, 7.8915],
                               [8.3734, 8.0903, 7.9805, 7.9457, 7.9323, 7.918],
                               [8.3796, 8.0984, 8.0025, 7.963, 7.9398, 7.9378],
                               [8.3867, 8.1062, 8.0128, 7.9757, 7.9538, 7.953],
                               [8.3899, 8.111, 8.021, 7.9873, 7.9679, 7.9662],
                               [8.3959, 8.1213, 8.032, 7.9974, 7.9814, 7.983],
                               [8.3999, 8.1303, 8.0418, 8.0025, 7.9946, 7.9962]],

                              [[8.1429, 7.7629, 7.6119, 7.5409, 7.4933, 7.4575],
                               [8.1519, 7.8424, 7.7153, 7.6443, 7.612, 7.5909],
                               [8.2212, 7.9071, 7.78, 7.7307, 7.697, 7.6753],
                               [8.2424, 7.9302, 7.8143, 7.7725, 7.7413, 7.7215],
                               [8.2559, 7.9539, 7.8458, 7.8014, 7.776, 7.7562],
                               [8.2637, 7.9779, 7.8621, 7.8232, 7.7981, 7.7821],
                               [8.2753, 7.9837, 7.8779, 7.8373, 7.8083, 7.8038],
                               [8.2774, 8.0002, 7.8968, 7.8531, 7.8364, 7.822],
                               [8.2839, 8.0051, 7.9068, 7.8664, 7.8408, 7.8387],
                               [8.2877, 8.0131, 7.9172, 7.8768, 7.857, 7.8549],
                               [8.2982, 8.0202, 7.9277, 7.8931, 7.8712, 7.8704]],

                              [[8.0248, 7.6484, 7.4909, 7.4146, 7.3672, 7.3357],
                               [8.0602, 7.7324, 7.5893, 7.5235, 7.4811, 7.4576],
                               [8.105, 7.7812, 7.6573, 7.5908, 7.5581, 7.5378],
                               [8.1326, 7.8185, 7.7023, 7.6323, 7.6084, 7.5867],
                               [8.1479, 7.8367, 7.7213, 7.6686, 7.6374, 7.6233],
                               [8.1529, 7.8658, 7.7376, 7.6907, 7.6619, 7.6519],
                               [8.1606, 7.8619, 7.7528, 7.706, 7.6806, 7.6731],
                               [8.172, 7.8769, 7.7662, 7.7238, 7.6997, 7.6824],
                               [8.1773, 7.8899, 7.7773, 7.7384, 7.7167, 7.7007],
                               [8.1851, 7.8985, 7.8016, 7.7546, 7.7388, 7.721],
                               [8.1972, 7.9141, 7.8043, 7.7695, 7.7562, 7.7418]],

                              [[7.9205, 7.5239, 7.3715, 7.2858, 7.2312, 7.1928],
                               [7.9657, 7.6087, 7.4612, 7.394, 7.345, 7.3075],
                               [7.9953, 7.6565, 7.5262, 7.4571, 7.4104, 7.3869],
                               [7.9999, 7.6852, 7.5615, 7.495, 7.4622, 7.4352],
                               [8.0318, 7.6999, 7.5802, 7.5229, 7.4902, 7.4706],
                               [8.0491, 7.7232, 7.607, 7.5455, 7.5182, 7.4965],
                               [8.0545, 7.7449, 7.627, 7.5628, 7.5414, 7.5222],
                               [8.0661, 7.7496, 7.6387, 7.5894, 7.5582, 7.5431],
                               [8.0719, 7.768, 7.6532, 7.6063, 7.5809, 7.5676],
                               [8.0749, 7.7822, 7.6715, 7.6258, 7.6017, 7.5819],
                               [8.0889, 7.8007, 7.6874, 7.6484, 7.6234, 7.6074]],

                              [[7.7942, 7.4049, 7.2307, 7.1384, 7.085, 7.0394],
                               [7.8557, 7.4728, 7.3184, 7.2482, 7.1947, 7.1523],
                               [7.8838, 7.5235, 7.3819, 7.3096, 7.2606, 7.2256],
                               [7.9024, 7.5571, 7.4141, 7.3449, 7.3026, 7.2798],
                               [7.864, 7.5753, 7.4449, 7.3791, 7.3324, 7.3123],
                               [7.9046, 7.5957, 7.4686, 7.397, 7.3588, 7.3432],
                               [7.941, 7.6156, 7.485, 7.4244, 7.3917, 7.3696],
                               [7.9557, 7.6313, 7.5076, 7.4444, 7.415, 7.3954],
                               [7.9638, 7.6482, 7.532, 7.4777, 7.443, 7.4247],
                               [7.9681, 7.6617, 7.5508, 7.5015, 7.4703, 7.4552],
                               [7.989, 7.686, 7.5745, 7.5276, 7.5022, 7.4913]]])

log_rho0_vpower50 = np.array([[[8.5181, 8.0752, 7.9026, 7.811, 7.7517, 7.7121],
                               [8.5333, 8.1387, 7.9796, 7.9149, 7.859, 7.819],
                               [8.5748, 8.1823, 8.0348, 7.9676, 7.9186, 7.8811],
                               [8.5662, 8.2108, 8.067, 7.9928, 7.9521, 7.9205],
                               [8.5623, 8.2234, 8.0907, 8.024, 7.974, 7.9538],
                               [8.5262, 8.2342, 8.0979, 8.0354, 7.9921, 7.9711],
                               [8.546, 8.2341, 8.1036, 8.0385, 8.0125, 7.9847],
                               [8.5621, 8.2415, 8.1178, 8.0513, 8.0186, 7.9974],
                               [8.5762, 8.2483, 8.1227, 8.0596, 8.0269, 8.0048],
                               [8.5896, 8.2442, 8.1245, 8.0672, 8.0345, 8.0149],
                               [8.5859, 8.264, 8.1345, 8.0746, 8.0452, 8.0223]],

                              [[8.3608, 7.9287, 7.7545, 7.6588, 7.6029, 7.5607],
                               [8.3769, 7.9889, 7.8347, 7.7551, 7.7076, 7.6761],
                               [8.4, 8.0321, 7.8888, 7.8166, 7.7709, 7.7359],
                               [8.4177, 8.0598, 7.9167, 7.8535, 7.8052, 7.7817],
                               [8.3624, 8.0736, 7.9399, 7.8774, 7.8307, 7.8072],
                               [8.3904, 8.0809, 7.9479, 7.8828, 7.8569, 7.8315],
                               [8.412, 8.089, 7.9644, 7.9013, 7.8685, 7.8448],
                               [8.4303, 8.1016, 7.971, 7.9103, 7.8785, 7.8556],
                               [8.4334, 8.1016, 7.9844, 7.9187, 7.8893, 7.8697],
                               [8.4429, 8.1127, 7.9906, 7.9291, 7.9043, 7.8792],
                               [8.4423, 8.1165, 8.0037, 7.946, 7.9147, 7.8931]],

                              [[8.1965, 7.7743, 7.6001, 7.5053, 7.4485, 7.403],
                               [8.2227, 7.8347, 7.6747, 7.5985, 7.5501, 7.5186],
                               [8.2466, 7.8787, 7.7296, 7.6607, 7.6142, 7.5792],
                               [8.2588, 7.9011, 7.7639, 7.6972, 7.6531, 7.6296],
                               [8.2121, 7.9175, 7.7838, 7.7213, 7.678, 7.657],
                               [8.2425, 7.9311, 7.804, 7.7376, 7.7024, 7.6777],
                               [8.267, 7.939, 7.8111, 7.7504, 7.7177, 7.6956],
                               [8.2818, 7.9457, 7.826, 7.7628, 7.7334, 7.7114],
                               [8.2785, 7.955, 7.8364, 7.7748, 7.7476, 7.7259],
                               [8.282, 7.9664, 7.8502, 7.7958, 7.7621, 7.7429],
                               [8.296, 7.9675, 7.8593, 7.8066, 7.7753, 7.7612]],

                              [[8.0496, 7.6067, 7.4291, 7.3417, 7.2858, 7.2403],
                               [8.0608, 7.6712, 7.5152, 7.4416, 7.3848, 7.3457],
                               [8.0812, 7.7141, 7.5691, 7.4969, 7.4479, 7.4129],
                               [8.0958, 7.7412, 7.5948, 7.5315, 7.4833, 7.4541],
                               [8.0454, 7.7566, 7.6229, 7.5579, 7.5113, 7.4902],
                               [8.0795, 7.7707, 7.6436, 7.5746, 7.5338, 7.5182],
                               [8.1086, 7.7857, 7.6527, 7.592, 7.5593, 7.5372],
                               [8.1185, 7.7965, 7.667, 7.6071, 7.5777, 7.5548],
                               [8.1243, 7.8044, 7.6882, 7.6215, 7.5967, 7.5751],
                               [8.134, 7.8161, 7.7007, 7.6446, 7.6134, 7.5992],
                               [8.1362, 7.8389, 7.7081, 7.6638, 7.635, 7.6251]],

                              [[7.8441, 7.4353, 7.2557, 7.1682, 7.1051, 7.0563],
                               [7.9016, 7.4957, 7.3387, 7.2553, 7.2024, 7.1682],
                               [7.9193, 7.5393, 7.3859, 7.3139, 7.2748, 7.2315],
                               [7.9291, 7.5669, 7.4366, 7.3515, 7.3084, 7.2857],
                               [7.9265, 7.5877, 7.4465, 7.3883, 7.3382, 7.3147],
                               [7.9046, 7.5951, 7.4646, 7.397, 7.3711, 7.3436],
                               [7.941, 7.613, 7.4875, 7.4244, 7.395, 7.3704],
                               [7.9591, 7.6338, 7.5076, 7.4477, 7.4184, 7.3954],
                               [7.9638, 7.6482, 7.532, 7.4777, 7.444, 7.4247],
                               [7.985, 7.6682, 7.5399, 7.4982, 7.4703, 7.4552],
                               [7.989, 7.6801, 7.5687, 7.5243, 7.4988, 7.4791]]])

log_rho0_vpower25 = np.array([[[8.7897, 8.3422, 8.1056, 8.0093, 7.9392, 7.8868],
                               [8.8752, 8.2916, 8.1683, 8.0728, 8.0205, 7.9629],
                               [8.8586, 8.3842, 8.204, 8.1148, 8.0555, 8.021],
                               [8.8454, 8.3962, 8.2283, 8.1366, 8.0771, 8.0404],
                               [8.844, 8.4035, 8.2436, 8.1517, 8.0947, 8.0638],
                               [8.8429, 8.4097, 8.2441, 8.1633, 8.1138, 8.0703],
                               [8.8394, 8.411, 8.2506, 8.1661, 8.1153, 8.0835],
                               [8.8272, 8.4166, 8.2501, 8.1854, 8.1261, 8.0946],
                               [8.8229, 8.4183, 8.2566, 8.1803, 8.1285, 8.0971],
                               [8.8146, 8.4142, 8.2667, 8.1838, 8.1337, 8.1022],
                               [8.8162, 8.4165, 8.2625, 8.1937, 8.1352, 8.1062]],

                              [[8.6655, 8.1429, 7.9185, 7.813, 7.7471, 7.6944],
                               [8.6386, 8.1519, 7.9764, 7.8863, 7.8207, 7.7693],
                               [8.6251, 8.1756, 8.0263, 7.9238, 7.8817, 7.8276],
                               [8.6269, 8.1985, 8.044, 7.9557, 7.8994, 7.8601],
                               [8.6158, 8.2095, 8.0477, 7.9798, 7.9206, 7.8891],
                               [8.6154, 8.2149, 8.0617, 7.9845, 7.9286, 7.8996],
                               [8.5891, 8.2183, 8.0664, 7.9929, 7.9437, 7.9071],
                               [8.6074, 8.2223, 8.0732, 7.9937, 7.957, 7.9162],
                               [8.624, 8.2282, 8.0774, 8.0085, 7.962, 7.9245],
                               [8.6048, 8.2311, 8.0774, 8.0097, 7.9665, 7.9315],
                               [8.597, 8.2331, 8.0969, 8.0143, 7.9745, 7.9395]],

                              [[8.4369, 7.9173, 7.705, 7.6144, 7.5462, 7.4943],
                               [8.4103, 7.9504, 7.779, 7.6864, 7.6282, 7.586],
                               [8.4, 7.9783, 7.8162, 7.733, 7.6825, 7.6398],
                               [8.3948, 7.9943, 7.8444, 7.7639, 7.7138, 7.6823],
                               [8.3892, 8.0092, 7.8608, 7.7814, 7.7338, 7.7014],
                               [8.4196, 8.0162, 7.8599, 7.7982, 7.7517, 7.7167],
                               [8.3962, 8.0349, 7.8903, 7.8052, 7.7621, 7.7393],
                               [8.3944, 8.0324, 7.8835, 7.8202, 7.772, 7.7428],
                               [8.398, 8.0351, 7.8999, 7.8247, 7.7831, 7.7596],
                               [8.3293, 8.0347, 7.9044, 7.8385, 7.7952, 7.7741],
                               [8.3501, 8.0406, 7.9077, 7.8425, 7.8166, 7.7887]],

                              [[8.1937, 7.6371, 7.5042, 7.4108, 7.3359, 7.2949],
                               [8.18, 7.7346, 7.5687, 7.4877, 7.4248, 7.394],
                               [8.1695, 7.7698, 7.6074, 7.5302, 7.4827, 7.4513],
                               [8.177, 7.7919, 7.6319, 7.5633, 7.5241, 7.4833],
                               [8.1745, 7.8191, 7.6538, 7.586, 7.5378, 7.5113],
                               [8.1854, 7.8133, 7.6737, 7.607, 7.563, 7.5361],
                               [8.1086, 7.8307, 7.6861, 7.6236, 7.577, 7.5534],
                               [8.1354, 7.8259, 7.6929, 7.6278, 7.6019, 7.574],
                               [8.1615, 7.8377, 7.7114, 7.6449, 7.6155, 7.5909],
                               [8.178, 7.8453, 7.7256, 7.6598, 7.6305, 7.6109],
                               [8.1852, 7.8534, 7.7423, 7.6757, 7.6509, 7.6292]],

                              [[8.0183, 7.4421, 7.2841, 7.1925, 7.1215, 7.0791],
                               [7.9415, 7.5175, 7.3544, 7.2678, 7.2132, 7.1772],
                               [7.9193, 7.5559, 7.4025, 7.3256, 7.2739, 7.2347],
                               [7.9500, 7.5771, 7.434, 7.3574, 7.3058, 7.2817],
                               [7.9582, 7.596, 7.4523, 7.3857, 7.3416, 7.3181],
                               [7.9046, 7.6034, 7.4714, 7.4079, 7.3646, 7.3436],
                               [7.941, 7.6172, 7.4909, 7.4244, 7.395, 7.3704],
                               [7.9625, 7.6338, 7.5076, 7.4444, 7.415, 7.3954],
                               [7.974, 7.6508, 7.5296, 7.4654, 7.444, 7.4247],
                               [7.985, 7.6708, 7.5399, 7.4957, 7.4669, 7.4438],
                               [7.9788, 7.6794, 7.5687, 7.5239, 7.4988, 7.4791]]])

log_rho0_vpower0 = np.array([[[9.0551, 8.7101, 8.4106, 8.2827, 8.1056, 8.0988],
                              [9.1632, 8.6583, 8.4074, 8.2848, 8.202, 8.1387],
                              [9.314, 8.6444, 8.3977, 8.3014, 8.2223, 8.179],
                              [9.2313, 8.6375, 8.4232, 8.3149, 8.245, 8.1917],
                              [9.2278, 8.6365, 8.4305, 8.3243, 8.2568, 8.2019],
                              [9.2084, 8.6321, 8.4299, 8.3275, 8.2576, 8.2057],
                              [9.1948, 8.6278, 8.4295, 8.3273, 8.2631, 8.2149],
                              [9.1666, 8.5621, 8.4292, 8.3358, 8.2609, 8.2199],
                              [9.1596, 8.5762, 8.4233, 8.3298, 8.2639, 8.214],
                              [9.1502, 8.5896, 8.4266, 8.3334, 8.2658, 8.2259],
                              [9.1316, 8.6028, 8.4274, 8.3348, 8.2683, 8.2229]],

                             [[8.8871, 8.3834, 8.1429, 7.9658, 7.9118, 7.8425],
                              [8.9853, 8.3652, 8.1384, 8.0286, 7.9582, 7.9055],
                              [8.9405, 8.3642, 8.1621, 8.0596, 8.0051, 7.9357],
                              [8.8969, 8.3635, 8.169, 8.0788, 8.0129, 7.9597],
                              [8.8776, 8.3624, 8.176, 8.0894, 8.0229, 7.9766],
                              [8.8629, 8.3667, 8.1824, 8.0892, 8.0333, 7.9877],
                              [8.842, 8.3647, 8.1933, 8.0948, 8.0295, 7.9945],
                              [8.8428, 8.3678, 8.204, 8.1016, 8.0536, 8.002],
                              [8.8203, 8.3574, 8.1915, 8.1047, 8.0477, 8.011],
                              [8.819, 8.3567, 8.1976, 8.101, 8.0515, 8.0131],
                              [8.802, 8.3629, 8.1965, 8.1133, 8.0604, 8.0177]],

                             [[8.6621, 8.0714, 7.8114, 7.7219, 7.6535, 7.6001],
                              [8.6465, 8.0868, 7.8812, 7.7824, 7.7206, 7.669],
                              [8.5984, 8.0982, 7.9113, 7.8162, 7.7569, 7.7225],
                              [8.5823, 8.1072, 7.9435, 7.841, 7.793, 7.7414],
                              [8.568, 8.1057, 7.9441, 7.855, 7.8004, 7.762],
                              [8.5475, 8.1105, 7.9447, 7.8592, 7.8083, 7.7741],
                              [8.5436, 8.1141, 7.9498, 7.8702, 7.8227, 7.7879],
                              [8.5253, 8.1131, 7.9574, 7.8769, 7.8268, 7.7953],
                              [8.5223, 8.1152, 7.9609, 7.8865, 7.8347, 7.804],
                              [8.5064, 8.1179, 7.9664, 7.8869, 7.8502, 7.8127],
                              [8.5272, 8.1238, 7.9702, 7.9, 7.8568, 7.8218]],

                             [[8.4005, 7.8142, 7.5746, 7.4707, 7.4008, 7.3483],
                              [8.3108, 7.8106, 7.627, 7.5295, 7.4736, 7.4307],
                              [8.2887, 7.8264, 7.657, 7.5707, 7.5211, 7.4827],
                              [8.2716, 7.847, 7.6793, 7.6031, 7.5522, 7.5208],
                              [8.2587, 7.8517, 7.6973, 7.6229, 7.577, 7.5404],
                              [8.2566, 7.8608, 7.7029, 7.6377, 7.5921, 7.5571],
                              [8.2453, 7.8765, 7.7261, 7.6434, 7.6037, 7.5687],
                              [8.2463, 7.8701, 7.7295, 7.657, 7.6154, 7.5919],
                              [8.1615, 7.8802, 7.739, 7.674, 7.6274, 7.6063],
                              [8.1881, 7.8762, 7.7521, 7.6832, 7.6423, 7.6267],
                              [8.2156, 7.8877, 7.7597, 7.699, 7.6663, 7.6409]],

                             [[8.0466, 7.4421, 7.3092, 7.21, 7.1409, 7.0999],
                              [7.9975, 7.531, 7.372, 7.2802, 7.2231, 7.1889],
                              [7.9789, 7.5668, 7.4077, 7.3305, 7.2771, 7.249],
                              [7.9904, 7.587, 7.4334, 7.3632, 7.3201, 7.2851],
                              [7.9699, 7.5954, 7.4582, 7.3857, 7.3441, 7.3205],
                              [7.9046, 7.6067, 7.4704, 7.4079, 7.3646, 7.3457],
                              [7.941, 7.6172, 7.4875, 7.4244, 7.3917, 7.3696],
                              [7.9692, 7.6279, 7.5076, 7.4419, 7.4171, 7.3954],
                              [7.974, 7.6416, 7.5237, 7.471, 7.4398, 7.4223],
                              [7.9681, 7.665, 7.5392, 7.4923, 7.4635, 7.4536],
                              [7.9788, 7.6762, 7.5594, 7.5205, 7.4964, 7.477]]])

c0_values = np.array([0.5, 2., 4., 6, 8, 10.])
z_values = np.arange(0, 3 + 0.3, 0.3)
mass_values = np.array([6, 7, 8, 9, 10])
v_powers = np.array([0., 0.25, 0.5, 0.75, 1.])
vstep = 0.25
mstep = 1.

from scipy.interpolate import RectBivariateSpline

interps_vpower1, interps_vpower75, interps_vpower50, interps_vpower25, interps_vpower0 = \
    [], [], [], [], []
for i in range(0, len(mass_values)):
    interps_vpower1.append(
        RectBivariateSpline(z_values, c0_values, log_rho0_vpower1[i, :, :]))
    interps_vpower75.append(
        RectBivariateSpline(z_values, c0_values, log_rho0_vpower75[i, :, :]))
    interps_vpower50.append(
        RectBivariateSpline(z_values, c0_values, log_rho0_vpower50[i, :, :]))
    interps_vpower25.append(
        RectBivariateSpline(z_values, c0_values, log_rho0_vpower25[i, :, :]))
    interps_vpower0.append(
        RectBivariateSpline(z_values, c0_values, log_rho0_vpower0[i, :, :]))

#interps_list = [interps_vpower0, interps_vpower25, interps_vpower50,
#                interps_vpower75, interps_vpower1]

from scipy.interpolate import RegularGridInterpolator

values = np.stack((log_rho0_vpower0, log_rho0_vpower25, log_rho0_vpower50,
                    log_rho0_vpower75, log_rho0_vpower1))

points = (v_powers, mass_values, z_values, c0_values)
interp = RegularGridInterpolator(points, values)

def logrho(log_mass, z, zeta, v_dep, delta_concentration_dex,
            concentration_scatter_scale=0.3):
    """
        :param log_mass: log(m200)
        :param z: redshift
        :param zeta: cross section times (halo age/10 [Gyr])
        :param v_dep: velocity dependence of cross section v^-v_dependence
        :param delta_concentration: (c - cmean)/cmean
        :return:
    """

    if v_dep < 0:
        raise Exception('velocity dep must be positive. '
                        '(sigma ~ v^(-v_dep)')
    elif v_dep > 1:
        raise Exception('velocity dep must be < 1.')

    xi = (v_dep, log_mass, z, zeta)
    log_rho = interp(xi)
    log_rho += delta_concentration_dex * concentration_scatter_scale
    return log_rho



# def logrho(log_mass, z, zeta, v_dep, delta_concentration,
#            concentration_scatter_scale=0.3):
#     """
#
#     :param log_mass: log(m200)
#     :param z: redshift
#     :param zeta: cross section times (halo age/10 [Gyr])
#     :param v_dep: velocity dependence of cross section v^-v_dependence
#     :param delta_concentration: (c - cmean)/cmean
#     :return:
#     """
#
#     if v_dep < 0:
#         raise Exception('velocity dep must be positive. '
#                         '(sigma ~ v^(-v_dep)')
#     elif v_dep > 1:
#         raise Exception('velocity dep must be < 1.')
#
#     diff = np.absolute(v_dep - v_powers)
#     min_indexes = np.argsort(diff)[0:2]
#     idx1, idx2 = min_indexes[0], min_indexes[1]
#     dv_min = abs(v_dep - v_powers[idx1])
#     w1 = 1 - dv_min / vstep
#     w2 = dv_min / vstep
#
#     interp_grid1, interp_grid2 = interps_list[idx1], interps_list[idx2]
#     rho1 = _eval_at_vpower(log_mass, z, zeta, interp_grid1)
#     rho2 = _eval_at_vpower(log_mass, z, zeta, interp_grid2)
#     return rho1 + concentration_scatter_scale + delta_concentration

# def _eval_at_vpower(log_mass, z, zeta, interps_vpower):
#     diff = np.absolute(mass_values - log_mass)
#     min_indexes = np.argsort(diff)[0:2]
#     idx1, idx2 = min_indexes[0], min_indexes[1]
#     dm_min = abs(log_mass - mass_values[idx1])
#     w1 = 1 - dm_min / mstep
#     w2 = dm_min / mstep
#     rho1 = interps_vpower[idx1](z, zeta)[0][0]
#     rho2 = interps_vpower[idx2](z, zeta)[0][0]
#
#     return rho1 * w1 + rho2 * w2
